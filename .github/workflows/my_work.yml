name: Event Demo 1
on: 
  pull_request:
    types:
      - opened
    branches:
      - master # main  
      - 'dev-*' # dev-new dev-new-1
      - 'feature/**' # feature/new feature/new/new1
  workflow_dispatch:
  push:
    branches:
      - master # main  
      - 'dev-*' # dev-new dev-new-1
      - 'feature/**' # feature/new feature/new/new1
    # paths-ignore:
    #   - '.github/workflows/*'
jobs:
  test: 
    runs-on: macos-latest
    steps:
      - name: Output event data
        run: echo "${{toJson(github.event)}}"  
      - name: Get code
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with: 
          distribution: 'temurin'
          java-version: 17
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
          # optional parameters follow
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:" # optional, change this to force refresh cache
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:" # optional, change this to specify the cache path
          pub-cache-key: "flutter-pub:os:-:channel:-:version:-:arch:-:hash:" # optional, change this to force refresh cache of dart pub get dependencies
          pub-cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:" # optional, change this to specify the cache path
      - name: Get dependencies
        run: flutter pub get
  build:
    needs: test
    runs-on: macos-latest
    steps:
      - name: Output event data
        run: echo "${{toJson(github.event)}}"  
      - name: Get code
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with: 
          distribution: 'temurin'
          java-version: 17    
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        id: flutter-action
        with:
          channel: stable
      - name: Get dependencies
        run: flutter pub get
      # - name: Build APK
      #   # env: 
      #   #   ENCODED_STRING: ${{ secrets.KEYSTORE_BASE_64 }}
      #   #   RELEASE_KEYSTORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
      #   #   RELEASE_KEYSTORE_ALIAS: ${{ secrets.KEY_ALIAS }}
      #   #   RELEASE_KEY_PASSWORD: ${{ secrets.KEY_STORE }} 
      #   run: flutter build apk --release
      # - name: Upload apk
      #   uses: actions/upload-artifact@v4
      #   with: 
      #     name: my-apk
      #     path: build
  deploy: 
    needs: build
    runs-on: macos-latest
    steps: 
      - name: Download apk
        uses: actions/download-artifact@v4
        with: 
          name: my-apk
      - name: Download path
        run: ls
        
        



    